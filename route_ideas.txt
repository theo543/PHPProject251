Routes:

There is a distinction between routes which immediatelly take an action and routes which merely display a page, which contains a form which can be submitted to take an action.
Forms are powered by the routes which take an action, but looking at a form does not take an action.
i.e. GET vs POST

All routes must redirect to /auth if the user is not logged in.
All unauthorized requests should redirect to /access-denied

Would be nice if ALL routes could show a message after redirecting to a GET route with some universal parameter.

There are three permissions an user can have: author, editor, admin.
You need to be an author to create posts.
You need to be an editor to modify published posts.
You need to be an admin to modify accounts.

Account management:

/auth GET => show the login page
/auth POST [username=X, password=Y] => authenticate user X with password Y
/logout POST => log out the current user
/reset POST [username=X] => send an email to user X with a link to reset their password
/reset_confirm GET [token=X] => reset the password of the user who requested the token X
/settings GET => show the settings page
/change_password POST [old_password=X, new_password=Y] => change the password of the current user
/admin_form GET => show the admin contact form
/admin_form POST [message=X] => send a message to the admin

Browsing:

/ GET => redirect to /posts
/posts?post_start=X GET => show a list of all published posts in reverse chronological order starting from post X
/posts?post_start=X&author=Y GET => show a list of all published posts by user Y in reverse chronological order starting from post X

/profile?user=X GET => show the profile of user X.
/rate [value=X, post=Y] POST => like or dislike post X
/version_history?post=X GET => show the version history of post X
/post?post=X GET => show the post with id X
/post?post=X&version=Y GET => show the post with id X as it was in version Y

Posting:

/edit [post=X, content=MD] POST => replace post X with new Markdown content
/new POST => create a new post and redirect to /edit?id=X
/publish [post=X, version=V] POST => make version V of post X the published version
/delete [post=X] POST => delete post X

Admin:

/admin GET => show the admin panel
/admin?user=X GET => show the admin panel for user X
/grant [user=X, permission=Y] POST => grant permission Y to user X
/revoke [user=X, permission=Y] POST => revoke permission Y from user X
/delete_user [user=X] POST => delete user X
/admin_messages GET => show all unread messages sent to the admin
/admin_messages POST [message=X] => acknowledge message X
